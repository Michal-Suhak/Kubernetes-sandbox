version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: fastapi-postgres
    environment:
      POSTGRES_USER: fastapi_user
      POSTGRES_PASSWORD: fastapi_password
      POSTGRES_DB: fastapi_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fastapi_user -d fastapi_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fastapi-network

  # pgAdmin - Web UI for PostgreSQL
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: fastapi-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - fastapi-network

  # FastAPI Application
  fastapi:
    build:
      context: .
      dockerfile: app/Dockerfile
    container_name: fastapi-app
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: fastapi_db
      DATABASE_USER: fastapi_user
      DATABASE_PASSWORD: fastapi_password
    ports:
      - "8000:8000"
    volumes:
      # Mount source code for hot reload
      - ./app:/app/app
      - ./migrations:/app/migrations
      - ./alembic.ini:/app/alembic.ini
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Running database migrations...'
        uv run alembic upgrade head
        echo 'Starting FastAPI application...'
        uv run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "
    networks:
      - fastapi-network

volumes:
  postgres_data:
    driver: local

networks:
  fastapi-network:
    driver: bridge